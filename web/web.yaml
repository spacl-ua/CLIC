apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ DEPLOYMENT }}
  labels:
    app: {{ DEPLOYMENT }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ DEPLOYMENT }}
    spec:
      containers:
      - name: clic-app
        image: gcr.io/clic-392518/web-{{ LABEL }}@{{ DIGEST }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1G"
            cpu: 1
          limits:
            memory: "4G"
            cpu: 4
        command: [
            "gunicorn",
            "--bind", ":8080",
            "--worker-class", "gevent",
            "--workers", "8",
            "--timeout", "600",
            "--log-level", "DEBUG",
            "clic.wsgi"]
        env:
          - name: DB_HOST
            value: "127.0.0.1"
          - name: DB_PORT
            value: "5432"
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: django-{{ LABEL }}
                key: secret_key
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: sentry-{{ LABEL }}
                key: dsn
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/var/run/secret/cloud.google.com/service-account.json"
        envFrom:
          - secretRef:
              name: cloudsql-{{ LABEL }}
          - secretRef:
              name: buckets-{{ LABEL }}
        volumeMounts:
          - name: clic-sa-key-volume
            mountPath: "/var/run/secret/cloud.google.com"
            readOnly: true
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1

      - name: clic-app-https
        image: gcr.io/clic-392518/web-{{ LABEL }}@{{ DIGEST }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1G"
            cpu: 1
          limits:
            memory: "4G"
            cpu: 4
        command: [
            "gunicorn",
            "--certfile=/var/run/secret/ssl/compression_cc.crt",
            "--keyfile=/var/run/secret/ssl/compression_cc.key",
            "--bind", ":4343",
            "--worker-class", "gevent",
            "--workers", "8",
            "--timeout", "600",
            "--log-level", "DEBUG",
            "clic.wsgi"]
        env:
          - name: DB_HOST
            value: "127.0.0.1"
          - name: DB_PORT
            value: "5432"
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: django-{{ LABEL }}
                key: secret_key
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: sentry-{{ LABEL }}
                key: dsn
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/var/run/secret/cloud.google.com/service-account.json"
        envFrom:
          - secretRef:
              name: cloudsql-{{ LABEL }}
          - secretRef:
              name: buckets-{{ LABEL }}
        volumeMounts:
          - name: clic-sa-key-volume
            mountPath: "/var/run/secret/cloud.google.com"
            readOnly: true
          - name: clic-ssl-key-volume
            mountPath: "/var/run/secret/ssl"
            readOnly: true
        ports:
        - containerPort: 4343
        readinessProbe:
          httpGet:
            path: /
            port: 4343
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1

      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.16
        command: ["/cloud_sql_proxy", "-dir=/cloudsql", "-instances=$(DB_INSTANCE)=tcp:5432", "-log_debug_stdout"]
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/var/run/secret/cloud.google.com/service-account.json"
        envFrom:
          - secretRef:
              name: cloudsql-{{ LABEL }}
        volumeMounts:
          - name: clic-sa-key-volume
            mountPath: "/var/run/secret/cloud.google.com"
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
            readOnly: true
          - name: cloudsql
            mountPath: /cloudsql

      volumes:
        - name: clic-sa-key-volume
          secret:
            secretName: clic-sa-key
        - name: clic-ssl-key-volume
          secret:
            secretName: clic-ssl-key
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir:
  selector:
    matchLabels:
      app: {{ DEPLOYMENT }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ DEPLOYMENT }}
  labels:
    app: {{ DEPLOYMENT }}
spec:
  type: LoadBalancer
  loadBalancerIP: "{{ IP_ADDRESS }}"
  ports:
    - name: "http"
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: "https"
      port: 443
      targetPort: 4343
      protocol: TCP
  selector:
    app: {{ DEPLOYMENT }}
